from aiogram import Bot
from aiogram.types import Message
from keyboards.register_kb import register_keyboard
from utils.database import Database
import os
from aiogram.fsm.context import FSMContext
from state.create import CreateState
from keyboards.profile_kb import profile_kb, category_type_kb, statistika_kb, balance_kb


async def get_start(message: Message, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    users = db.select_user_id(message.from_user.id)
    if (users):
        await bot.send_message(message.from_user.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {users[1]}!', reply_markup=profile_kb)
    else:
        await bot.send_message(message.from_user.id, f'üòä–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name} {message.from_user.last_name}, —Ä–∞–¥ –í–∞—Å –≤–∏–¥–µ—Ç—å!\n'
                                                    f'üíº–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –í–∞—à–∏–º –¥–æ—Ö–æ–¥–∞–º –∏ —Ä–∞—Å—Ö–æ–¥–∞–º, –∞ —Ç–∞–∫ –∂–µ –¥–µ–ª–∞—Ç—å –≤—ã–ø–∏—Å–∫—É –ø–æ –í–∞—à–µ–º—É –∫–æ—à–µ–ª—å–∫—É!üíº\n'
                                                    f'–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–π—Ç–∏ –Ω–∞—Ö—É–π.üòä\n\n\n', reply_markup=register_keyboard)

async def category_type(message: Message, state: FSMContext, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    await bot.send_message(message.from_user.id, f'–≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ', reply_markup=category_type_kb)
    await state.set_state(CreateState.categories)

async def balance_type(message: Message, state: FSMContext, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    await bot.send_message(message.from_user.id, f'–≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ', reply_markup=balance_kb)
    await state.set_state(CreateState.categories)

async def statistic_type(message: Message, state: FSMContext, bot: Bot):
    db = Database(os.getenv('DATABASE_NAME'))
    await bot.send_message(message.from_user.id, f'–≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ', reply_markup=statistika_kb)
    await state.set_state(CreateState.categories)


